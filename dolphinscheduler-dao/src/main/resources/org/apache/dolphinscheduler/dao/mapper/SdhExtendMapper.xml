<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.dolphinscheduler.dao.mapper.SdhExtendMapper">

    <select id="selectInfoAndLastInstanceInfo" resultType="org.apache.dolphinscheduler.dao.vo.ProcessListDto" >
        select
            A.*
             ,B.scheduleTime
             ,B.state
             ,B.startTime
             ,B.endTime
        from t_ds_process_definition A
                 inner join (select tmpa.process_definition_code
                                 , tmpa.process_definition_version
                                 , tmpa.state
                                 , tmpa.schedule_time as scheduleTime
                                 , tmpa.start_time as startTime
                                 , tmpa.end_time as endTime
                            from t_ds_process_instance tmpa
                                     join (select process_definition_code, process_definition_version, max(id) as maxId
                                           from t_ds_process_instance
                                           group by process_definition_code, process_definition_version) As tmpb
                                          on tmpa.id = tmpb.maxId) as B
                           on A.`code` = B.process_definition_code
                               and A.`version` = B.process_definition_version
        where A.project_code = #{projectCode}
        <if test="list != null and list.size()>0">
            and
            <foreach collection="list" item="item" open="(" separator=" or " close=")">
                ( A.code = #{item.code} and  A.version = #{item.version})
            </foreach>
        </if>
    </select>
</mapper>
